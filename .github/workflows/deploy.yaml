name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

env:
  POSTGRES_ADMIN_PASSWORD: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  DATABASE_URL: ${{ secrets.DATABASE_URL}}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  DJANGO_KEY: ${{ secrets.DJANGO_KEY }}


jobs:
  test:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.12.3"  

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Set Django settings
          run: echo "DJANGO_SETTINGS_MODULE=demo.settings

        - name: Run tests with pytest
          run: |
            pytest --junitxml=reports/test-results.xml  # Generates a test report

        - name: Upload test report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: pytest-results
            path: reports/test-results.xml

  coverage:
      needs: test 
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.12.3"

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt pytest pytest-cov

        - name: Set Django settings
          run: echo "DJANGO_SETTINGS_MODULE=todo_app.settings" >> $GITHUB_ENV

        - name: Run tests with coverage
          run: |
            pytest --cov=todo_app --cov-report=xml --cov-report=html

        - name: Upload coverage report
          uses: actions/upload-artifact@v4
          with:
            name: coverage-report
            path: htmlcov 

  sonarqube:
      needs: test  
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: "https://sonarcloud.io"  
          with:
            args: >
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
              -Dsonar.organization=kadimasum  
              -Dsonar.python.coverage.reportPaths=coverage.xml

  build:
    needs: sonarqube
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:$GITHUB_SHA .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:$GITHUB_SHA


  slack:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: 'github-actions-workshop'
        if: always()